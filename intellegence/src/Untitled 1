//CCI_RINT_CHECK_HOLIDAYS
	public static CBBag checkHolidays(CBBag inBag) throws CBException {
		CBBag outBag = CBBagFactory.createBag();
		CBTime from=new CBTime("160000");
		CBTime to=new CBTime("235959");		
		try {							
			CBDate today = CBSystem.getInstance().getDate();
			CBDate valueDate = CBSystem.getInstance().getDate();
			int days=10;
			int difference=0;
			CBDate earlyStart = CBDateFactory.newCBDate("20121228");
			CBDate start = CBDateFactory.newCBDate("20121229");
			CBDate earlyend = CBDateFactory.newCBDate("20130107");
			CBDate end = CBDateFactory.newCBDate("20130108");
			if(inBag.existsBagKey(DAYCOUNTDATE))
				days = inBag.get(DAYCOUNTDATE).toSimpleInt();
			if(inBag.get(DOCUMENTENTRYDATE).toString().length()==0 )
				inBag.put(DOCUMENTENTRYDATE, today);
			if(inBag.existsBagKey(FLAG) && inBag.get(FLAG).toString().equalsIgnoreCase("RKC"))
			{
				if(today.isOfficialHoliday() && today.compareTo(start)!=0 )
					valueDate=today;
				else 
					if(CBSystem.getInstance().getCurrentTime().greaterThan(from) && CBSystem.getInstance().getCurrentTime().smallerThan(to))//from 16:00 till 24:00
					{
						valueDate=today.add(CBDate.DAY, 1);
					}
					else
						valueDate=today;
				
				difference=valueDate.difference(valueDate.getNextOfficialWorkingDate());
				outBag.put(VALUEDATE_, valueDate.getNextOfficialWorkingDate().toString("."));
				if(valueDate.isOfficialHoliday())
				{
					if( valueDate.compareTo(end)==0 || valueDate.compareTo(earlyend)==0 )
						outBag.put(VALUE_, "2");
					else if(valueDate.greaterThan(valueDate.getNextOfficialWorkingDate().subtract(CBDate.DAY, days))&& difference>2)
						outBag.put(VALUE_, "2");
					else if(difference<=2)
						outBag.put(VALUE_, "0");
					else
						outBag.put(VALUE_, "1");
				}else
					outBag.put(VALUE_, "0");
			}else if(inBag.existsBagKey(FLAG) && inBag.get(FLAG).toString().equalsIgnoreCase("SWIFT"))
			{
				CBTime currentTime = CBSystem.getInstance().getCurrentTime();
				if( today.compareTo(start)==0 )
					valueDate = today.add(CBDate.DAY, 1);
				else if( today.compareTo(earlyStart)==0 && currentTime.getHour()>=15 )
					valueDate = today.add(CBDate.DAY, 2);
				else if(today.isOfficialHoliday()) 
					valueDate=today;
				else if( currentTime.getHour()>=15 ) // After twelve value date is next day
				{
					valueDate = today.add(CBDate.DAY, 1);
				}
					else
						valueDate=today;
				
				difference=valueDate.difference(valueDate.getNextOfficialWorkingDate());
				outBag.put(VALUEDATE_, valueDate.getNextOfficialWorkingDate().toString("."));
				if(valueDate.isOfficialHoliday())
				{
					if( valueDate.compareTo(end)==0 || valueDate.compareTo(earlyend)==0 )
						outBag.put(VALUE_, "2");
					else if(valueDate.greaterThan(valueDate.getNextOfficialWorkingDate().subtract(CBDate.DAY, days)) && difference>2)
						outBag.put(VALUE_, "2");
					else if(difference<=2)
						outBag.put(VALUE_, "0");
				}else
					outBag.put(VALUE_, "0");
			}
		}catch (CBException ce) {
			if(ce.id == 160081 ){
				throw new CBException(Constants.RECEIVER_ACCOUNT_IS_NOT_RIGHT, null);
			}else{
			CBBag errorBag = CBBagFactory.createBag();
			errorBag.put(NOTE, "rkcPayment");
			ce.printStackTrace();
			throw ce;
			}
		}catch (Exception e) {			
			e.printStackTrace();
			CBBag exBag = CBBagFactory.createBag();
			throw new CBException(CBSMGExceptions.SYSTEM_ERROR, exBag);
		}finally {
		
		}
		return outBag;
	}
	